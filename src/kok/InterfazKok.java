/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kok;

import analizadores.Vector;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.geom.AffineTransform;
import java.awt.geom.Line2D;
import java.awt.geom.Path2D;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import manejadores.ManejadorGraphics;
import manejadores.ManejadorInterfaz;

/**
 *
 * @author fabricio
 */
public class InterfazKok extends javax.swing.JFrame {

    public static int PREFERED_WIDTH = 620;
    public static int PREFERED_HEIGHT = 350;
    public static Vector START_POSITION = new Vector(0, 350);
    public static Vector INITIAL_POSITION = new Vector(310, 350);
    public static Vector CENTER_POSITION = new Vector(310, 175);
    public static int INITIAL_X = 310;
    public static int INITIAL_Y = 350;
    public static int CENTER_X = 310;
    public static int CENTER_Y = 175;
    public static int COMPLEMENTO = 0;
    public static int AJUSTE = 20;
    public final static String IMAGE_RELATIVE_PATH = "resources/turtle.png";

    InterfazKok.Dibujo2D dibuj = null;
    private boolean started = false;
    private boolean showTurtle = true;
    private boolean clears = false;
    private boolean edition = true;
    private Vector pos = new Vector(0, 0);
    private double anguloAnterior = 0;
    private double anguloActual = 0;
    private Color color = null;
    Vector v1 = new Vector(310, 350);
    Vector v2 = new Vector(310, 150);
    List<Line2D> lines = null;
    List<AffineTransform> affines = null;
    List<Color> colores = null;

    public class Dibujo2D extends JPanel {

        public Dibujo2D() {
        }

        @Override

        public void paintComponent(Graphics g) {

            super.paintComponent(g);

            Graphics2D g2 = (Graphics2D) g;

            if (clears) {

                if (showTurtle) {
                    Image im1 = Toolkit.getDefaultToolkit().getImage(IMAGE_RELATIVE_PATH);
                    g2.drawImage(im1, (int) (v1.getX() - AJUSTE), (int) (v1.getY() - AJUSTE), this);
                    g2.finalize();
                }

            } else {

                for (int i = 0; i < lines.size(); i++) {
                    g2.setColor(colores.get(i));
                    g2.draw(affines.get(i).createTransformedShape(lines.get(i)));
                }

                Vector v = ManejadorInterfaz.getInstance().getVector(Math.abs(v1.getY() - v2.getY()), anguloAnterior);
                if (showTurtle) {
                    Image im1 = Toolkit.getDefaultToolkit().getImage(IMAGE_RELATIVE_PATH);
                    g2.drawImage(im1, (int) (v1.getX() + v.getX() - AJUSTE), (int) (v1.getY() - v.getY() - AJUSTE), this);
                    g2.finalize();
                }
            }
        }
    }

    /**
     * Creates new form InterfazKok
     */
    public InterfazKok() {
        initComponents();
        this.setTitle("Kok");
        this.setLocationRelativeTo(this);
        ManejadorInterfaz.getInstance().setInterfazKok(this);
        this.lines = new LinkedList<>();
        this.affines = new LinkedList<>();
        this.colores = new LinkedList<>();
        ManejadorInterfaz.getInstance().clears();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mensajesArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        comandosArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        edicionArea = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        posx = new javax.swing.JLabel();
        posy = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        posAngulo = new javax.swing.JLabel();
        runButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        abrirMenu = new javax.swing.JMenuItem();
        guardarMenu = new javax.swing.JMenuItem();
        cerrarMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mensajesArea.setEditable(false);
        mensajesArea.setColumns(20);
        mensajesArea.setRows(5);
        mensajesArea.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jScrollPane1.setViewportView(mensajesArea);

        comandosArea.setColumns(20);
        comandosArea.setRows(5);
        comandosArea.setMargin(new java.awt.Insets(5, 5, 5, 5));
        comandosArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                comandosAreaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(comandosArea);

        edicionArea.setEditable(true);
        edicionArea.setEnabled(false);
        edicionArea.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jScrollPane3.setViewportView(edicionArea);

        jLabel1.setText("COMANDOS");

        jLabel2.setText("MENSAJES");

        jLabel3.setText("EDICION");

        jPanel.setBackground(new java.awt.Color(254, 254, 254));
        jPanel.setAutoscrolls(true);
        jPanel.setPreferredSize(new java.awt.Dimension(634, 360));

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        jLabel4.setText("X:");

        jLabel5.setText("Y:");

        posx.setText(" ");

        posy.setText(" ");

        jLabel6.setText("Angulo:");

        posAngulo.setText(" ");

        runButton.setBackground(new java.awt.Color(0, 185, 3));
        runButton.setForeground(new java.awt.Color(254, 254, 254));
        runButton.setText("Run");
        runButton.setEnabled(false);
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(1, 104, 180));
        clearButton.setForeground(new java.awt.Color(254, 254, 254));
        clearButton.setText("Clear");
        clearButton.setEnabled(false);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3)
                                .addGap(6, 6, 6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel1)
                                .addGap(43, 43, 43)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(posx, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(posy, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(posAngulo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jLabel2)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(103, 103, 103))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(posAngulo)
                                .addComponent(posy)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(posx))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(runButton)
                            .addComponent(clearButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        jMenu1.setText("Archivo");

        abrirMenu.setText("Abrir");
        abrirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirMenuActionPerformed(evt);
            }
        });
        jMenu1.add(abrirMenu);

        guardarMenu.setText("Guardar");
        guardarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarMenuActionPerformed(evt);
            }
        });
        jMenu1.add(guardarMenu);

        cerrarMenu.setText("Cerrar");
        jMenu1.add(cerrarMenu);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comandosAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comandosAreaKeyReleased
        if ((int) evt.getKeyChar() == (int) '\n') {
            try {
                ManejadorInterfaz.getInstance().setInstructionByComandos(comandosArea.getText().trim(), 1);
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_comandosAreaKeyReleased

    private void abrirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirMenuActionPerformed
        ManejadorInterfaz.getInstance().openFile();
    }//GEN-LAST:event_abrirMenuActionPerformed

    private void guardarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarMenuActionPerformed
        ManejadorInterfaz.getInstance().saveFile(comandosArea.getText());
    }//GEN-LAST:event_guardarMenuActionPerformed

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        try {
            ManejadorInterfaz.getInstance().setInstructionByComandos(edicionArea.getText(), 0);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_runButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        edicionArea.setText("");
    }//GEN-LAST:event_clearButtonActionPerformed

    public JTextArea getComandosArea() {
        return comandosArea;
    }

    public JTextPane getEdicionArea() {
        return edicionArea;
    }

    public JTextArea getMensajesArea() {
        return mensajesArea;
    }

    public void setCoordenates(int n) {
        this.v2.setY(n);
        dibujar();
    }

    public boolean isEdition() {
        return edition;
    }

    public JButton getClearButton() {
        return clearButton;
    }

    public JButton getRunButton() {
        return runButton;
    }

    public void setEdition(boolean edition) {
        this.edition = edition;
    }

    public double getAnguloAnterior() {
        return anguloAnterior;
    }

    public void setAnguloAnterior(double angulo) {
        this.anguloAnterior = angulo;
        System.out.println(anguloAnterior);
    }

    public double getAnguloActual() {
        return anguloActual;
    }

    public void setAnguloActual(double anguloActual, int option) { // 0 = sumar, 1 = remplazar valor
        if (option == 1) {
            this.anguloActual = anguloActual;
        } else if (option == 0) {
            this.anguloActual += anguloActual;
        }
        posAngulo.setText(this.anguloActual + "");
    }

    public Vector getPos() {
        return pos;
    }

    public void setPos(Vector pos) {
        this.pos = pos;
    }

    public Vector getV1() {
        return v1;
    }

    public void setV1(Vector v1) {
        this.v1 = v1;
    }

    public Vector getV2() {
        return v2;
    }

    public void setV2(Vector v2) {
        this.v2 = v2;
    }

    public boolean isStarted() {
        return started;
    }

    public void setStarted(boolean started) {
        this.started = started;
    }

    public boolean isShowTurtle() {
        return showTurtle;
    }

    public void setShowTurtle(boolean showTurtle) {
        this.showTurtle = showTurtle;
        dibujar();
    }

    public List<Line2D> getLines() {
        return lines;
    }

    public List<Color> getColores() {
        return colores;
    }

    public void setColores(List<Color> colores) {
        this.colores = colores;
    }

    public void clearLines() {
        this.lines.clear();
    }

    public void setLines(List<Line2D> lines) {
        this.lines = lines;
    }

    public List<AffineTransform> getAffines() {
        return affines;
    }

    public void clearAfflines() {
        this.affines.clear();
    }

    public void setAffines(List<AffineTransform> affines) {
        this.affines = affines;
    }

    public void clearColors() {
        this.colores.clear();
    }

    public boolean isClears() {
        return clears;
    }

    public void setClears(boolean clears) {
        this.clears = clears;
    }

    public Color getColor() {
        return color;
    }

    public void setColor(Color color) {
        this.color = color;
    }

    public JLabel getPosAngulo() {
        return posAngulo;
    }

    public JLabel getPosx() {
        return posx;
    }

    public JLabel getPosy() {
        return posy;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrirMenu;
    private javax.swing.JMenuItem cerrarMenu;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextArea comandosArea;
    private javax.swing.JTextPane edicionArea;
    private javax.swing.JMenuItem guardarMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea mensajesArea;
    private javax.swing.JLabel posAngulo;
    private javax.swing.JLabel posx;
    private javax.swing.JLabel posy;
    private javax.swing.JButton runButton;
    // End of variables declaration//GEN-END:variables

    public void dibujar() {
        if (!started) {
            dibuj = new InterfazKok.Dibujo2D();
            dibuj.setBounds(new Rectangle(PREFERED_WIDTH, PREFERED_HEIGHT));
            dibuj.setOpaque(false);
            started = true;
            if (color == null) {
                this.color = Color.BLACK;
            }
        }
        ManejadorGraphics mg = new ManejadorGraphics(this);
        mg.addGraphic();
        jPanel.add(dibuj);
        jPanel.repaint();
    }

}
